{"version":3,"sources":["Table.js","Form.js","Date.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","initialState","state","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","Datetoday","dateNum","Date","toLocaleDateString","undefined","day","weekday","month","year","hour","minute","second","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"4NAGMA,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,sCACA,8CAOVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJCA,MAUjB,OAAO,gCAAQJ,KAeJS,EAXD,SAACV,GACX,IAAQE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCcvDE,E,4MAjDXC,aAAe,SAACC,GACZ,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACKV,EAAOS,K,EAKhBE,aAAe,CACXX,KAAM,GACNC,IAAK,I,EAGTW,MAAQ,EAAKD,a,EAEbE,WAAa,WACT,EAAKnB,MAAMoB,aAAa,EAAKF,OAC7B,EAAKF,SAAS,EAAKC,e,4CAIvB,WACI,MAAsBI,KAAKH,MAAnBZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACI,iCACI,uBAAOe,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHT,MAAOT,EACPmB,SAAUJ,KAAKT,eACnB,uBAAOU,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHT,MAAOR,EACPkB,SAAUJ,KAAKT,eACnB,uBAAOW,KAAK,SAASR,MAAM,SAASP,QAASa,KAAKF,oB,GA3C/CO,aCkBJC,EAjBC,WACZ,IASIC,GATW,IAAIC,MAAOC,wBAAmBC,EAAW,CACpDC,IAAK,UACLC,QAAS,OACTC,MAAO,OACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YAIZ,OACI,8BAAMV,KCuBCW,E,4MAjCXrB,MAAQ,CACJsB,WAAY,I,EAGhB/B,gBAAkB,SAACJ,GACf,IAAQmC,EAAe,EAAKtB,MAApBsB,WAER,EAAKxB,SAAS,CACVwB,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAMtC,Q,EAKzBe,aAAe,SAACsB,GACZ,EAAK1B,SAAS,CAAEwB,WAAW,GAAD,mBAAM,EAAKtB,MAAMsB,YAAjB,CAA6BE,O,4CAG3D,WACI,IAAQF,EAAenB,KAAKH,MAApBsB,WAGR,OACI,sBAAKI,UAAU,YAAf,UACI,kDACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAO1C,cAAesC,EAAY/B,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GA5BvBM,a,MCElBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cb58b3c2.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Duty</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    )\n}\n\n\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        )\n    })\n\n    return <tbody>{rows}</tbody>\n}\n\n\nconst Table = (props) => {\n    const { characterData, removeCharacter } = props\n\n    return (\n        <table>\n            <TableHeader />\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n        </table>\n    )\n}\n\nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component {\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n\n    initialState = {\n        name: '',\n        job: '',\n    }\n\n    state = this.initialState\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n\n    render() {\n        const { name, job } = this.state;\n\n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange} />\n                <label htmlFor=\"job\">Job</label>\n                <input\n                    type=\"text\"\n                    name=\"job\"\n                    id=\"job\"\n                    value={job}\n                    onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        );\n    }\n\n\n}\n\nexport default Form;","import React from 'react';\n\n\nlet Datetoday = () => {\n    var showDate = new Date().toLocaleDateString(undefined, {\n        day: 'numeric',\n        weekday: 'long',\n        month: 'long',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n    })\n    var dateNum = showDate\n\n    return (\n        <div>{dateNum}</div>\n    )\n}\n\nexport default Datetoday\n","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\nimport Date from './Date'\n\nclass App extends Component {\n    state = {\n        characters: [],\n    }\n\n    removeCharacter = (index) => {\n        const { characters } = this.state\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            }),\n        })\n    }\n\n    handleSubmit = (character) => {\n        this.setState({ characters: [...this.state.characters, character] })\n    }\n\n    render() {\n        const { characters } = this.state\n\n\n        return (\n            <div className=\"container\">\n                <h1>Staff Management</h1>\n                <Date />\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        )\n    }\n}\n\nexport default App","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n"],"sourceRoot":""}